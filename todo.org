#+TITLE: Crux 'Site' TODO list

* Holidays
** DONE Query our holidays back

** DONE Holidays should be 'owned' by the individual taking the holiday

** DONE Count the number of days an individual has taken off in total

** DONE Segment the count by year

** DONE Make web server dependent upon Crux node

** DONE Add a holiday 'relation' to the Crux database

** DONE Get the holiday relation in response to a GET on /holidays

** DONE Generate the HTML of a form to fill out

** TODO Fill out the form and send back to the server

** TODO Support JSON & HTML

** TODO Use the relation, and the form fields, to submit a holiday in Crux

** TODO Calculate the number of days a person has taken

** TODO [#B] Don't count public holidays and weekends against the holiday 'length'
  DEADLINE: <2020-10-02 Fri>

** TODO Use the Crux Console to display holidays by user

** TODO Generate an iCalendar feed to show holidays in JUXT's Google Calendar

* PBAC


** TODO Policies
And rules inherit their attributes
Policies can match targets

** TODO Rule-combining algorithms

** TODO Policy-set, policy-combining algorithms

** TODO Ingestion

** TODO OpenAPI PUT

*** TODO Routing

*** TODO Crux 'owner' group


** Snaglist

*** TODO Why does the first PUT of /user-groups/{id} get a Vary header?

*** TODO Why do subsequent puts of /user-groups/{id} have a nil old-representation?

*** TODO put-representation: Dispatch on some aspect of the resource, not the representation content-type
Multiple ways of handling application/json

*** TODO Why does this not return json by default?
curl -i localhost:8082/_crux/users/crux/admin -K cruxadmin
Pick has a way to weight preferred responses, we should use it.


** <2021-02-05 Fri> GOALS

*** DONE PUT user into a Crux with a hashed-password
SCHEDULED: <2021-02-05 Fri 16:00>

** <2021-02-09 Tue> GOALS

*** DONE Fix userGroups relation issue

*** TODO Show members of usergroups on text/html representation

*** TODO application/json of each endpoint

*** TODO Asset manager API as part of bootstrap
Add in actual assets

*** TODO Security 'pass' authorization tests via bootstrap

*** TODO Stretch: password as an individual document

*** TODO Stretch: forms (from schema)
If resource allows PUT, then generate a form
OR just rely on Swagger
OR is there something else

*** TODO Add in 'root' UI library as a nice 'default' page

*** TODO Upload a Selmer 'template' that can be attached to a resource OR a openapi GET operation (via its config)

*** TODO Trial some application examples

**** TODO Cards - Zettelkasten - post demo with @deo on Friday
**** TODO Holidays/Timesheets
**** TODO Kanban-hiring board
**** TODO Kanban-sales
**** TODO Kanban-actions
**** TODO Kanban-resources
